@model CAPS.Models.Room

@{
    ViewData["Title"] = Model.RoomId == 0 ? "Create Room" : "Edit Room";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-mint fw-bold">@ViewData["Title"]</h2>
        <a asp-action="Index" class="btn btn-outline-mint">
            <i class="bi bi-arrow-left me-2"></i>Back to Rooms
        </a>
    </div>

    <div class="card border-0 shadow-sm">
        <div class="card-body p-4">
            <form asp-action="UpSert" method="post">
                @Html.HiddenFor(m => m.RoomId)
                @Html.HiddenFor(m => m.DateCreated)
                @Html.HiddenFor(m => m.DateModified)
                @Html.HiddenFor(m => m.IsAvailable)

                <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label asp-for="RoomNumber" class="form-label fw-semibold text-mint">Room Number *</label>
                        <input asp-for="RoomNumber" class="form-control" placeholder="e.g., R001, R002" />
                        <span asp-validation-for="RoomNumber" class="text-danger"></span>
                        <small class="text-muted">Enter a unique room identifier (e.g., R001, Room-1, Suite-A)</small>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label asp-for="RoomType" class="form-label fw-semibold text-mint">Room Type *</label>
                        <select asp-for="RoomType" class="form-select">
                            <option value="">-- Select Room Type --</option>
                            @foreach (var roomType in ViewBag.RoomTypes)
                            {
                                <option value="@roomType">@roomType</option>
                            }
                        </select>
                        <span asp-validation-for="RoomType" class="text-danger"></span>
                    </div>
                </div>


                <div class="row">
                    <div class="col-md-6 mb-3">
                        <div class="form-check">
                            <input asp-for="IsAvailable" class="form-check-input" type="checkbox" />
                            <label asp-for="IsAvailable" class="form-check-label fw-semibold text-mint">
                                Room is Available
                            </label>
                        </div>
                        <small class="text-muted">Uncheck if the room is currently out of service or under maintenance</small>
                    </div>
                </div>

                <div class="d-flex gap-2 mt-4">
                    <button type="submit" class="btn btn-mint">
                        <i class="bi bi-save me-2"></i>@(Model.RoomId == 0 ? "Create" : "Update") Room
                    </button>
                    <a asp-action="Index" class="btn btn-outline-mint">
                        <i class="bi bi-x-circle me-2"></i>Cancel
                    </a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        // Auto-format room number input
        document.querySelector('input[name="RoomNumber"]').addEventListener('input', function(e) {
            // Convert to uppercase and remove spaces
            e.target.value = e.target.value.toUpperCase().replace(/\s/g, '');
        });

    </script>
}

<style>
    .text-mint {
        color: #2D5A4A !important;
    }
    
    .btn-mint {
        background-color: #2D5A4A;
        border-color: #2D5A4A;
        color: white;
        transition: all 0.3s ease;
    }
    
    .btn-mint:hover {
        background-color: #1a3a2e;
        border-color: #1a3a2e;
        color: white;
        transform: translateY(-2px);
    }
    
    .btn-outline-mint {
        color: #2D5A4A;
        border-color: #2D5A4A;
        transition: all 0.3s ease;
    }
    
    .btn-outline-mint:hover {
        background-color: #2D5A4A;
        border-color: #2D5A4A;
        color: white;
    }
    
    .form-control:focus, .form-select:focus {
        border-color: #2D5A4A;
        box-shadow: 0 0 0 0.2rem rgba(45, 90, 74, 0.25);
    }
    
    .form-check-input:checked {
        background-color: #2D5A4A;
        border-color: #2D5A4A;
    }
    
    .form-check-input:focus {
        border-color: #2D5A4A;
        box-shadow: 0 0 0 0.2rem rgba(45, 90, 74, 0.25);
    }
</style>
