@model CAPS.Models.Client

@{
    ViewData["Title"] = "Service Extend - " + Model.FirstName + " " + Model.LastName;
    var allServices = ViewBag.AllServices as List<CAPS.Models.Service>;
    var clientServiceDurations = ViewBag.ClientServiceDurations as Dictionary<int, int>;
}

<div class="service-extend-container">
    <!-- Main Header Banner -->
    <div class="main-header">
        <h1 class="main-title">Service Extended</h1>
    </div>

    <!-- Back Button -->
    <div class="back-button-container">
        <a asp-action="Index" class="back-button">
            <i class="bi bi-arrow-left"></i> Back to Clients
        </a>
    </div>

    <!-- Client Information Section -->
    <div class="client-info-panel">
        <div class="panel-header">
            <h2 class="panel-title">Client Information</h2>
        </div>
        <div class="panel-content">
            <div class="client-info-grid">
                <div class="info-item">
                    <span class="info-label">Name:</span>
                    <span class="info-value">@Model.FirstName @Model.LastName</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Phone:</span>
                    <span class="info-value">@Model.PhoneNumber</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Gender:</span>
                    <span class="info-value">@Model.Gender</span>
                </div>
                <div class="info-item">
                    <span class="info-label">Date Registered:</span>
                    <span class="info-value">@Model.DateRegistered.ToString("MMM dd, yyyy")</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Service Durations Section -->
    <div class="service-durations-panel">
        <div class="panel-header">
            <h2 class="panel-title">Edit Service Durations</h2>
        </div>
        <div class="panel-content">
            @if (allServices != null && allServices.Any())
            {
                <form asp-action="ServiceExtend" method="post">
                    <input type="hidden" name="clientId" value="@Model.ClientId" />

                    <div class="services-table-container">
                        <table class="services-table">
                            <thead>
                                <tr>
                                    <th>Service Name</th>
                                    <th>Category</th>
                                    <th>Description</th>
                                    <th>Price</th>
                                    <th>Default Duration</th>
                                    <th>Client Duration</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var service in allServices)
                                {
                                    var currentDuration = clientServiceDurations?.ContainsKey(service.ServiceId) == true
                                    ? clientServiceDurations[service.ServiceId]
                                    : 0;

                                    <tr>
                                        <td>
                                            <div class="service-name">@service.Name</div>
                                        </td>
                                        <td>
                                            <span class="category-badge">@service.Category</span>
                                        </td>
                                        <td>
                                            <div class="service-description">@(service.Description ?? "No description")</div>
                                        </td>
                                        <td>
                                            <span class="service-price">@service.Price.ToString("F2")</span>
                                        </td>
                                        <td>
                                            <span class="default-duration">@service.Duration min</span>
                                        </td>
                                        <td>
                                            <div class="duration-input-group">
                                                <input type="number"
                                                       name="serviceDurations[@service.ServiceId]"
                                                       value="@currentDuration"
                                                       class="duration-input"
                                                       min="0"
                                                       max="480"
                                                       placeholder="0"
                                                       title="Enter duration in minutes (15-480 for active services)" />
                                                <span class="duration-unit">min</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>

                    <div class="form-actions">
                        <button type="submit" class="save-button">
                            <i class="bi bi-check"></i> Save Service Durations
                        </button>
                        <a asp-action="Index" class="cancel-button">
                            <i class="bi bi-x"></i> Cancel
                        </a>
                    </div>
                </form>
            }
            else
            {
                <div class="empty-state">
                    <i class="bi bi-gear empty-icon"></i>
                    <h5 class="empty-title">No Services Available</h5>
                    <p class="empty-message">There are no active services to configure.</p>
                </div>
            }
        </div>
    </div>

    <!-- Current Service Summary -->
    @if (clientServiceDurations != null && clientServiceDurations.Any())
    {
        <div class="summary-panel">
            <div class="panel-header">
                <h2 class="panel-title">
                    <i class="bi bi-clock"></i> Current Service Summary
                </h2>
            </div>
            <div class="panel-content">
                <div class="summary-grid">
                    <div class="summary-item">
                        <span class="summary-label">Services with Duration:</span>
                        <span class="summary-value">@clientServiceDurations.Count</span>
                    </div>
                    <div class="summary-item">
                        <span class="summary-label">Total Duration:</span>
                        <span class="summary-value highlight">@clientServiceDurations.Values.Sum() minutes</span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 1050;">
        <i class="bi bi-check-circle me-2"></i>
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 1050;">
        <i class="bi bi-exclamation-triangle me-2"></i>
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<style>
    body {
        background-color: #f0f8f0;
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .service-extend-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 30px;
        background-color: #f0f8f0;
        min-height: 100vh;
    }

    /* Main Header Banner */
    .main-header {
        background-color: #2d5016;
        border-radius: 8px;
        padding: 25px;
        text-align: center;
        margin-bottom: 20px;
    }

    .main-title {
        font-family: Arial, sans-serif;
        font-size: 32px;
        font-weight: bold;
        color: #ffffff;
        margin: 0;
        letter-spacing: 1px;
    }

    /* Back Button */
    .back-button-container {
        margin-bottom: 20px;
        text-align: right;
    }

    .back-button {
        background-color: #ffffff;
        border: 2px solid #2d5016;
        border-radius: 6px;
        padding: 10px 20px;
        color: #2d5016;
        text-decoration: none;
        font-weight: bold;
        font-size: 16px;
        display: inline-flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        font-family: Arial, sans-serif;
    }

        .back-button:hover {
            background-color: #2d5016;
            color: #ffffff;
            text-decoration: none;
        }

    /* Panel Styles */
    .client-info-panel,
    .service-durations-panel,
    .summary-panel {
        background-color: #ffffff;
        border: 1px solid #2d5016;
        border-radius: 8px;
        margin-bottom: 20px;
        overflow: hidden;
    }

    .panel-header {
        background-color: #ffffff;
        border-bottom: 1px solid #2d5016;
        padding: 20px;
    }

    .panel-title {
        font-family: Arial, sans-serif;
        font-size: 20px;
        font-weight: bold;
        color: #000000;
        margin: 0;
    }

    .panel-content {
        padding: 25px;
    }

    /* Client Information Grid */
    .client-info-grid {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 20px;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 5px;
    }

    .info-label {
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
        color: #000000;
    }

    .info-value {
        font-family: Arial, sans-serif;
        font-size: 16px;
        color: #000000;
    }

    /* Services Table */
    .services-table-container {
        width: 100%;
        overflow-x: auto;
    }

    .services-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .services-table th {
            background-color: #f8f9fa;
            border-bottom: 2px solid #2d5016;
            padding: 15px 12px;
            text-align: left;
            font-family: Arial, sans-serif;
            font-size: 14px;
            font-weight: bold;
            color: #2d5016;
        }

        .services-table td {
            border-bottom: 1px solid #e9ecef;
            padding: 15px 12px;
            font-family: Arial, sans-serif;
            font-size: 14px;
            color: #000000;
        }

        .services-table tr:hover {
            background-color: #f8f9fa;
        }

    .service-name {
        font-weight: bold;
        color: #2d5016;
    }

    .category-badge {
        background-color: #e8f5e8;
        color: #2d5016;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: bold;
    }

    .service-description {
        color: #6c757d;
        font-size: 13px;
        line-height: 1.4;
    }

    .service-price {
        font-weight: bold;
        color: #28a745;
        font-size: 16px;
    }

    .default-duration {
        color: #6c757d;
        font-size: 14px;
    }

    /* Duration Input */
    .duration-input-group {
        display: flex;
        align-items: center;
        width: 120px;
    }

    .duration-input {
        flex: 1;
        padding: 8px 10px;
        border: 1px solid #2d5016;
        border-right: none;
        border-radius: 4px 0 0 4px;
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #2d5016;
        background-color: #ffffff;
    }

        .duration-input:focus {
            outline: none;
            border-color: #2d5016;
            box-shadow: 0 0 0 2px rgba(45, 80, 22, 0.2);
        }

    .duration-unit {
        background-color: #e8f5e8;
        color: #2d5016;
        padding: 8px 10px;
        border: 1px solid #2d5016;
        border-radius: 0 4px 4px 0;
        font-family: Arial, sans-serif;
        font-size: 14px;
        font-weight: bold;
    }

    /* Form Actions */
    .form-actions {
        display: flex;
        gap: 15px;
        justify-content: center;
        padding-top: 20px;
        border-top: 1px solid #e9ecef;
    }

    .save-button {
        background-color: #28a745;
        border: none;
        border-radius: 6px;
        padding: 12px 24px;
        color: #ffffff;
        font-weight: bold;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-family: Arial, sans-serif;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .save-button:hover {
            background-color: #218838;
            transform: translateY(-1px);
        }

    .cancel-button {
        background-color: #ffffff;
        border: 2px solid #6c757d;
        border-radius: 6px;
        padding: 12px 24px;
        color: #6c757d;
        text-decoration: none;
        font-weight: bold;
        font-size: 16px;
        transition: all 0.3s ease;
        font-family: Arial, sans-serif;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .cancel-button:hover {
            background-color: #6c757d;
            color: #ffffff;
            text-decoration: none;
        }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: #6c757d;
    }

    .empty-icon {
        font-size: 48px;
        margin-bottom: 20px;
        color: #dee2e6;
    }

    .empty-title {
        font-family: Arial, sans-serif;
        font-size: 18px;
        font-weight: bold;
        color: #6c757d;
        margin-bottom: 10px;
    }

    .empty-message {
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #6c757d;
    }

    /* Summary Panel */
    .summary-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 20px;
    }

    .summary-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px;
        background-color: #f8f9fa;
        border-radius: 6px;
    }

    .summary-label {
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #6c757d;
    }

    .summary-value {
        font-family: Arial, sans-serif;
        font-size: 16px;
        font-weight: bold;
        color: #2d5016;
    }

        .summary-value.highlight {
            color: #007bff;
            font-size: 18px;
        }

    /* Alert Styles */
    .alert {
        min-width: 300px;
        border-radius: 8px;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .service-extend-container {
            padding: 15px;
        }

        .main-title {
            font-size: 24px;
        }

        .client-info-grid {
            grid-template-columns: 1fr;
            gap: 15px;
        }

        .services-table-container {
            overflow-x: auto;
        }

        .services-table {
            min-width: 600px;
        }

        .form-actions {
            flex-direction: column;
            gap: 10px;
        }

        .summary-grid {
            grid-template-columns: 1fr;
            gap: 15px;
        }
    }
</style>

<script>
    // Auto-hide alerts after 5 seconds
    setTimeout(function() {
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            var bsAlert = new bootstrap.Alert(alert);
            bsAlert.close();
        });
    }, 5000);

    // Form validation for duration inputs
    document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const durationInputs = document.querySelectorAll('input[type="number"]');

        form.addEventListener('submit', function(e) {
            let hasErrors = false;

            durationInputs.forEach(function(input) {
                const value = parseInt(input.value) || 0;

                if (value > 0 && (value < 15 || value > 480)) {
                    input.classList.add('is-invalid');
                    input.setCustomValidity('Duration must be between 15 and 480 minutes for active services');
                    hasErrors = true;
                } else {
                    input.classList.remove('is-invalid');
                    input.setCustomValidity('');
                }
            });

            if (hasErrors) {
                e.preventDefault();
                alert('Please correct the duration values. Active services must have duration between 15-480 minutes.');
            }
        });

        // Real-time validation
        durationInputs.forEach(function(input) {
            input.addEventListener('input', function() {
                const value = parseInt(this.value) || 0;

                if (value > 0 && (value < 15 || value > 480)) {
                    this.classList.add('is-invalid');
                    this.setCustomValidity('Duration must be between 15 and 480 minutes for active services');
                } else {
                    this.classList.remove('is-invalid');
                    this.setCustomValidity('');
                }
            });
        });
    });
</script>
