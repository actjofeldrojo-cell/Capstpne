@model List<CAPS.Models.Appointment>

@{
    ViewData["Title"] = "My Appointments";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-2">@ViewData["Title"]</h2>
            <p class="text-muted mb-0">Manage your appointments and book new ones</p>
        </div>
        <div>
            <a asp-action="Book" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-lg"></i> Book New Appointment
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle"></i> @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-triangle"></i> @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (Model.Count > 0)
    {
        <div class="row">
            @foreach (var appointment in Model)
            {
                <div class="col-md-6 col-lg-4 mb-4">
                    <div class="card h-100 shadow-sm">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h6 class="mb-0">
                                <i class="bi bi-calendar-event text-primary"></i>
                                @appointment.AppointmentDate.ToString("MMM dd, yyyy")
                            </h6>
                            <span class="badge bg-@(GetStatusBadgeColor(appointment.Status))">@appointment.Status</span>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <h6 class="card-title text-primary">@appointment.Service?.Name</h6>
                                <p class="text-muted small mb-1">@appointment.Service?.Category</p>
                                <p class="mb-0">
                                    <i class="bi bi-clock text-muted"></i>
                                    <strong>@appointment.AppointmentTime.ToString(@"hh\:mm")</strong>
                                    <span class="text-muted">(@appointment.Duration min)</span>
                                </p>
                            </div>
                            
                            <div class="mb-3">
                                <h6 class="fw-bold">Client Details</h6>
                                <p class="mb-1">
                                    <i class="bi bi-person text-muted"></i>
                                    @appointment.Client?.FirstName @appointment.Client?.LastName
                                </p>
                                <p class="mb-1">
                                    <i class="bi bi-telephone text-muted"></i>
                                    @appointment.Client?.PhoneNumber
                                </p>
                                <p class="mb-0">
                                    <i class="bi bi-gender-ambiguous text-muted"></i>
                                    @appointment.Client?.Gender
                                </p>
                            </div>

                            @if (appointment.Cost.HasValue)
                            {
                                <div class="mb-3">
                                    <h6 class="fw-bold text-success">
                                        <i class="bi bi-currency-dollar"></i>
                                        â‚±@appointment.Cost.Value.ToString("N2")
                                    </h6>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(appointment.Notes))
                            {
                                <div class="mb-3">
                                    <h6 class="fw-bold">Notes</h6>
                                    <p class="text-muted small mb-0">@appointment.Notes</p>
                                </div>
                            }

                            @if (appointment.CancellationReason != null)
                            {
                                <div class="mb-3">
                                    <h6 class="fw-bold text-danger">Cancellation Reason</h6>
                                    <p class="text-muted small mb-0">@appointment.CancellationReason</p>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-flex gap-2 flex-wrap">
                                @if (appointment.Status?.ToLower() == "scheduled" || appointment.Status?.ToLower() == "confirmed")
                                {
                                    <a asp-action="UserEdit" asp-route-id="@appointment.AppointmentId" 
                                       class="btn btn-outline-warning btn-sm">
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </a>
                                    <button type="button" class="btn btn-outline-danger btn-sm" 
                                            onclick="showCancelModal(@appointment.AppointmentId, '@appointment.AppointmentDate.ToString("MMMM dd, yyyy")', '@appointment.AppointmentTime.ToString(@"hh\:mm")', '@appointment.Client?.FirstName @appointment.Client?.LastName', '@appointment.Service?.Name')">
                                        <i class="bi bi-x-circle"></i> Cancel
                                    </button>
                                }
                                else
                                {
                                    <span class="text-muted small">No actions available</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="text-center my-5">
            <i class="bi bi-calendar-x h1 text-muted"></i>
            <h4 class="text-muted mt-3">No appointments found</h4>
            <p class="text-muted">You haven't booked any appointments yet.</p>
            <a asp-action="Book" class="btn btn-primary btn-lg">
                <i class="bi bi-plus-lg"></i> Book Your First Appointment
            </a>
        </div>
    }
</div>

<!-- Cancel Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="cancelModalLabel">
                    <i class="bi bi-x-circle"></i> Cancel Appointment
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle"></i>
                    <strong>Note:</strong> This will mark the appointment as cancelled. You can provide a reason for the cancellation below.
                </div>
                <div id="cancelAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
                <form id="cancelForm" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="cancelAppointmentId" name="id" />
                    <div class="mb-3">
                        <label for="cancellationReason" class="form-label fw-bold">
                            <i class="bi bi-chat-text"></i> Cancellation Reason (Optional)
                        </label>
                        <textarea class="form-control" id="cancellationReason" name="cancellationReason" 
                                  rows="3" placeholder="Please provide a reason for cancellation..."></textarea>
                        <div class="form-text">This will help us improve our services.</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                <button type="button" class="btn btn-warning" onclick="confirmCancel()">
                    <i class="bi bi-x-circle"></i> Confirm Cancellation
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let currentAppointmentId = null;

        function showCancelModal(id, date, time, clientName, serviceName) {
            currentAppointmentId = id;
            document.getElementById('cancelAppointmentId').value = id;
            
            const modalBody = document.getElementById('cancelAppointmentDetails');
            modalBody.innerHTML = `
                <h6 class="fw-bold">Appointment Details:</h6>
                <p class="mb-1"><strong>Date:</strong> ${date}</p>
                <p class="mb-1"><strong>Time:</strong> ${time}</p>
                <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
                <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
            `;
            
            const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
            modal.show();
        }

        function confirmCancel() {
            const form = document.getElementById('cancelForm');
            form.action = '/Appointment/UserCancel';
            form.submit();
        }
    </script>
}

@functions {
    public string GetStatusBadgeColor(string status)
    {
        return status?.ToLower() switch
        {
            "scheduled" => "primary",
            "confirmed" => "success",
            "completed" => "success",
            "cancelled" => "danger",
            "no-show" => "warning",
            _ => "secondary"
        };
    }
}

