@model List<CAPS.Models.Appointment>

@{
    ViewData["Title"] = "Appointments";
}

<div class="container my-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h2>@ViewData["Title"]</h2>
        </div>
        <div>
            <a asp-action="UpSert" class="btn btn-primary">
                <i class="bi bi-plus-lg"></i> New Appointment
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="table-responsive">
        <table class="table table-striped table-bordered align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Date & Time</th>
                    <th>Client</th>
                    <th>Service</th>
                    <th>Duration</th>
                    <th>Status</th>
                    <th>Cost</th>
                    <th class="text-center">Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <div class="fw-bold">@item.AppointmentDate.ToString("MMM dd, yyyy")</div>
                            <small class="text-muted">@item.AppointmentTime.ToString()</small>
                        </td>
                        <td>
                            <div class="fw-bold">@item.Client?.FirstName @item.Client?.LastName</div>
                            <small class="text-muted">@item.Client?.PhoneNumber</small>
                        </td>
                        <td>
                            <div class="fw-bold">@item.Service?.Name</div>
                            <small class="text-muted">@item.Service?.Category</small>
                        </td>
                        <td>
                            <span class="badge bg-info">@item.Duration min</span>
                        </td>
                        <td>
                            @switch (item.Status?.ToLower())
                            {
                                case "scheduled":
                                    <span class="badge bg-primary">Scheduled</span>
                                    break;
                                case "confirmed":
                                    <span class="badge bg-success">Confirmed</span>
                                    break;
                                case "completed":
                                    <span class="badge bg-success">Completed</span>
                                    break;
                                case "cancelled":
                                    <span class="badge bg-danger">Cancelled</span>
                                    break;
                                case "no-show":
                                    <span class="badge bg-warning">No-Show</span>
                                    break;
                                default:
                                    <span class="badge bg-secondary">@item.Status</span>
                                    break;
                            }
                        </td>
                        <td>
                            @if (item.Cost.HasValue)
                            {
                                <span class="fw-bold">₱@item.Cost.Value.ToString("N2")</span>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                        <td class="text-center">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-sm btn-info" title="View Details" 
                                        onclick="showDetailsModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@item.Duration', '@Html.Raw(item.Status)', '@Html.Raw(item.Cost?.ToString("N2") ?? "Not set")', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Client?.PhoneNumber)', '@Html.Raw(item.Client?.Gender)', '@Html.Raw(item.Service?.Name)', '@Html.Raw(item.Service?.Category)', '@Html.Raw(item.Notes ?? "")')">
                                    <i class="bi bi-eye"></i>
                                </button>
                                <a asp-action="UpSert" asp-route-id="@item.AppointmentId" class="btn btn-sm btn-warning" title="Edit">
                                    <i class="bi bi-pencil-square"></i>
                                </a>
                                @if (item.Status?.ToLower() == "scheduled" || item.Status?.ToLower() == "confirmed")
                                {
                                    <button type="button" class="btn btn-sm btn-danger" title="Cancel" 
                                            onclick="showCancelModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-x-circle"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-sm btn-danger" title="Delete" 
                                            onclick="showDeleteModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @if (Model.Count == 0)
    {
        <div class="text-center my-5">
            <i class="bi bi-calendar-x h1 text-muted"></i>
            <h4 class="text-muted mt-3">No appointments found.</h4>
            <p class="text-muted">Start by scheduling your first appointment.</p>
            <a asp-action="UpSert" class="btn btn-primary">
                <i class="bi bi-plus-lg"></i> Schedule First Appointment
            </a>
        </div>
    }
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">
                    <i class="bi bi-calendar-event"></i> Appointment Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsModalBody">
                <!-- Content will be populated by JavaScript -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Cancel Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="cancelModalLabel">
                    <i class="bi bi-x-circle"></i> Cancel Appointment
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle"></i>
                    <strong>Note:</strong> This will mark the appointment as cancelled. You can provide a reason for the cancellation below.
                </div>
                <div id="cancelAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
                <div class="mb-3">
                    <label for="cancellationReason" class="form-label fw-bold">
                        <i class="bi bi-chat-text"></i> Cancellation Reason (Optional)
                    </label>
                    <textarea class="form-control" id="cancellationReason" rows="3" 
                              placeholder="Please provide a reason for cancellation..."></textarea>
                    <div class="form-text">This will help track why appointments are being cancelled.</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                <button type="button" class="btn btn-warning" onclick="confirmCancel()">
                    <i class="bi bi-x-circle"></i> Confirm Cancellation
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> Are you sure you want to delete this appointment? This action cannot be undone.
                </div>
                <div id="deleteAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">
                    <i class="bi bi-trash"></i> Confirm Delete
                </button>
            </div>
        </div>
    </div>
</div>


  
  <!-- Hidden form for actions -->
<form id="actionForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" id="actionId" name="id" />
    <input type="hidden" id="actionType" name="actionType" />
    <input type="hidden" id="cancellationReasonInput" name="cancellationReason" />
</form>

<style>
    .table th {
        white-space: nowrap;
        vertical-align: middle;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .text-truncate {
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
    
         .btn-group .btn {
         margin: 0 1px;
     }
     
     .badge {
         font-size: 0.75rem;
         padding: 0.5rem 0.75rem;
     }
     
     /* Modal styling */
     .modal-header {
         background-color: #f8f9fa;
         border-bottom: 1px solid #dee2e6;
     }
     
     .modal-footer {
         background-color: #f8f9fa;
         border-top: 1px solid #dee2e6;
     }
     
     /* Completion modal specific styling */
     .modal-header.bg-success {
         background-color: #198754 !important;
     }
     
     .btn-close-white {
         filter: invert(1) grayscale(100%) brightness(200%);
     }
     
     .modal-lg .modal-body {
         padding: 1.5rem;
     }
     
     .form-label.fw-bold {
         color: #495057;
         margin-bottom: 0.5rem;
     }
     
     .form-text {
         font-size: 0.875rem;
         color: #6c757d;
         margin-top: 0.25rem;
     }
     

</style>

<script>
    let currentAppointmentId = null;

    function showDetailsModal(id, date, time, duration, status, cost, clientName, clientPhone, clientGender, serviceName, serviceCategory, notes) {
        const modalBody = document.getElementById('detailsModalBody');
        modalBody.innerHTML = `
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Appointment Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Date:</dt>
                                        <dd class="col-sm-8">${date}</dd>
                                        <dt class="col-sm-4">Time:</dt>
                                        <dd class="col-sm-8">${time}</dd>
                                        <dt class="col-sm-4">Duration:</dt>
                                        <dd class="col-sm-8">${duration} minutes</dd>
                                        <dt class="col-sm-4">Status:</dt>
                                        <dd class="col-sm-8">
                                            <span class="badge bg-${getStatusBadgeColor(status)}">${status}</span>
                                        </dd>
                                        <dt class="col-sm-4">Cost:</dt>
                                        <dd class="col-sm-8">${cost}</dd>
                                    </dl>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="fw-bold">Client Information:</h6>
                                    <p class="mb-1"><strong>${clientName}</strong></p>
                                    <p class="text-muted mb-1"><i class="bi bi-telephone"></i> ${clientPhone}</p>
                                    <p class="text-muted mb-3"><i class="bi bi-gender-ambiguous"></i> ${clientGender}</p>
                                    
                                    <h6 class="fw-bold">Service:</h6>
                                    <p class="mb-1"><strong>${serviceName}</strong></p>
                                    <p class="text-muted mb-3">${serviceCategory}</p>
                                    
                                </div>
                            </div>
                            ${notes ? `<div class="mt-3"><h6>Notes:</h6><p class="text-muted">${notes}</p></div>` : ''}
                        </div>
                    </div>
                </div>
            </div>
        `;
        
        const modal = new bootstrap.Modal(document.getElementById('detailsModal'));
        modal.show();
    }

    function showCancelModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('cancelAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;
        
        const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
        modal.show();
    }

    function showDeleteModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('deleteAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;
        
        const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
        modal.show();
    }

    function confirmCancel() {
        const reason = document.getElementById('cancellationReason').value;
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'cancel';
        document.getElementById('cancellationReasonInput').value = reason;
        document.getElementById('actionForm').action = '/Appointment/Cancel';
        document.getElementById('actionForm').submit();
    }

    function confirmDelete() {
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'delete';
        document.getElementById('actionForm').action = '/Appointment/Delete';
        document.getElementById('actionForm').submit();
    }


     

     

     

     

     
     function getStatusBadgeColor(status) {
        switch (status.toLowerCase()) {
            case 'scheduled': return 'primary';
            case 'confirmed': return 'success';
            case 'completed': return 'success';
            case 'cancelled': return 'danger';
            case 'no-show': return 'warning';
            default: return 'secondary';
        }
    }


</script>
