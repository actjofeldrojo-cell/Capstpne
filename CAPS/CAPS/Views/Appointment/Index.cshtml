@model List<CAPS.Models.Appointment>
@using System.Collections.Generic

@{
    ViewData["Title"] = "Appointments";
}

<div class="appointments-container">
    <!-- Page Title Banner -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="page-title-container">
                <h1 class="page-title">Client Profile</h1>
            </div>
        </div>
    </div>

    <!-- Status Filter Tabs -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="status-filter-container">
                <div class="status-filter-tabs">
                    @* <button type="button" class="status-tab active" onclick="filterAppointments('all')" id="allTab">
                        All
                    </button>
                    <button type="button" class="status-tab" onclick="filterAppointments('in-service')" id="in-serviceTab">
                        Schedule
                    </button> *@
                    @* <button type="button" class="status-tab" onclick="filterAppointments('confirmed')" id="confirmedTab">
                        Confirmed
                    </button> *@
                    @* <button type="button" class="status-tab" onclick="filterAppointments('completed')" id="completedTab">
                        Completed
                    </button> *@
                </div>
            </div>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Appointments Table -->
    <div class="appointments-table-container">
        <div class="table-header">
            <div class="table-header-row">
                <div class="table-header-cell">Date & Time</div>
                <div class="table-header-cell">Client</div>
                @* <div class="table-header-cell">Services</div>
                <div class="table-header-cell">Duration</div>
                <div class="table-header-cell">Status</div>
                <div class="table-header-cell">Cost</div> *@
                <div class="table-header-cell">Actions</div>
            </div>
        </div>
        <div class="table-body">
            @{ var displayedClients = new HashSet<int>(); }
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    <div class="table-row">
                        <div class="table-cell">
                            <div class="date-time-info">
                                <div class="date">@item.AppointmentDate.ToString("MMM dd, yyyy")</div>
                                <div class="time">@item.AppointmentTime.ToString(@"hh\:mm")</div>
                            </div>
                        </div>
                        <div class="table-cell">
                            <div class="client-info">
                                @if (item.ClientId != 0 && !displayedClients.Contains(item.ClientId))
                                {
                                    displayedClients.Add(item.ClientId);
                                    <div class="client-name">@item.Client?.FirstName @item.Client?.LastName</div>
                                    <div class="client-phone">@item.Client?.PhoneNumber</div>
                                }
                                else
                                {
                                    <div class="client-name">&nbsp;</div>
                                    <div class="client-phone">&nbsp;</div>
                                }
                            </div>
                        </div>
                       @*  <div class="table-cell">
                            <div class="service-info">
                                <div class="service-name">@item.Service?.Name</div>
                                <div class="service-category">@item.Service?.Category</div>
                            </div>
                        </div>
                        <div class="table-cell">
                            <div class="duration-badge">@item.Duration min</div>
                        </div>
                        <div class="table-cell">
                            @switch (item.Status?.ToLower())
                            {
                                case "scheduled":
                                    <div class="status-badge scheduled">Scheduled</div>
                                    break;
                                case "confirmed":
                                    <div class="status-badge confirmed">Confirmed</div>
                                    @if (item.DateModified.HasValue)
                                    {
                                        <div class="status-date">@item.DateModified.Value.ToString("MMM dd, yyyy HH:mm")</div>
                                    }
                                    break;
                                case "completed":
                                    <div class="status-badge completed">Completed</div>
                                    @if (item.DateModified.HasValue)
                                    {
                                        <div class="status-date">@item.DateModified.Value.ToString("MMM dd, yyyy HH:mm")</div>
                                    }
                                    break;
                                case "cancelled":
                                    <div class="status-badge cancelled">Cancelled</div>
                                    break;
                                case "no-show":
                                    <div class="status-badge no-show">No-Show</div>
                                    break;
                                default:
                                //In-Service
                                    <div class="status-badge completed">@item.Status</div>
                                    break;
                            }
                        </div>
                        <div class="table-cell">
                            @if (item.Cost.HasValue)
                            {
                                <div class="cost-amount">â‚±@item.Cost.Value.ToString("N2")</div>
                            }
                            else
                            {
                                <div class="cost-empty">-</div>
                            }
                        </div> *@
                        <div class="table-cell">
                            <div class="action-buttons">
                                <button type="button" class="action-btn view-btn" title="View Details"
                                        onclick="showDetailsModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@item.Duration', '@Html.Raw(item.Status)', '@Html.Raw(item.Cost?.ToString("N2") ?? "Not set")', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Client?.PhoneNumber)', '@Html.Raw(item.Client?.PreferredTherapistGender ?? "No Preference")', '@Html.Raw(item.Client?.MassagePressureLevel ?? "No Preference")', '@Html.Raw(item.Client?.MusicPreference ?? "No Preference")', '@Html.Raw(item.Client?.TemperaturePreference ?? "No Preference")', '@Html.Raw(item.Client?.ComfortItemPreferences ?? "None")', '@Html.Raw(item.Service?.Name)', '@Html.Raw(item.Service?.Category)', '@Html.Raw(item.Notes ?? "")')">
                                    <i class="bi bi-eye"></i>
                                </button>
                               @*  <a asp-action="UpSert" asp-route-id="@item.AppointmentId" class="action-btn edit-btn" title="Edit">
                                    <i class="bi bi-pencil-square"></i>
                                </a> *@
                                @if (item.Status?.ToLower() == "scheduled")
                                {
                                    <button type="button" class="action-btn confirm-btn" title="Confirm"
                                            onclick="showConfirmModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-check-circle"></i>
                                    </button>
                                }
                                @if (item.Status?.ToLower() == "confirmed")
                                {
                                    <button type="button" class="action-btn complete-btn" title="Complete"
                                            onclick="showCompleteModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-check2-all"></i>
                                    </button>
                                }
                                @if (item.Status?.ToLower() == "scheduled" || item.Status?.ToLower() == "confirmed")
                                {
                                    <button type="button" class="action-btn cancel-btn" title="Cancel"
                                            onclick="showCancelModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-x-circle"></i>
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="action-btn delete-btn" title="Delete"
                                            onclick="showDeleteModal(@item.AppointmentId, '@Html.Raw(item.AppointmentDate.ToString("MMMM dd, yyyy"))', '@Html.Raw(item.AppointmentTime.ToString(@"hh\:mm"))', '@Html.Raw(item.Client?.FirstName + " " + item.Client?.LastName)', '@Html.Raw(item.Service?.Name)')">
                                        <i class="bi bi-trash"></i>
                                    </button>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-icon">
                        <i class="bi bi-calendar-x"></i>
                    </div>
                    <div class="empty-message">No appointments found</div>
                    <div class="empty-description">Start by scheduling your first appointment</div>
                    <a asp-action="UpSert" class="empty-action-btn">
                        <i class="bi bi-plus-lg"></i> Schedule First Appointment
                    </a>
                </div>
            }
        </div>
    </div>

</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">
                    <i class="bi bi-calendar-event"></i> Client Details
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="detailsModalBody">
                <!-- Content will be populated by JavaScript -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Cancel Modal -->
<div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning text-dark">
                <h5 class="modal-title" id="cancelModalLabel">
                    <i class="bi bi-x-circle"></i> Cancel Appointment
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-info-circle"></i>
                    <strong>Note:</strong> This will mark the appointment as cancelled. You can provide a reason for the cancellation below.
                </div>
                <div id="cancelAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
                <div class="mb-3">
                    <label for="cancellationReason" class="form-label fw-bold">
                        <i class="bi bi-chat-text"></i> Cancellation Reason (Optional)
                    </label>
                    <textarea class="form-control" id="cancellationReason" rows="3"
                              placeholder="Please provide a reason for cancellation..."></textarea>
                    <div class="form-text">This will help track why appointments are being cancelled.</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Back</button>
                <button type="button" class="btn btn-warning" onclick="confirmCancel()">
                    <i class="bi bi-x-circle"></i> Confirm Cancellation
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Confirm Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-success text-white">
                <h5 class="modal-title" id="confirmModalLabel">
                    <i class="bi bi-check-circle"></i> Confirm Appointment
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-success" role="alert">
                    <i class="bi bi-check-circle"></i>
                    <strong>Confirm:</strong> Are you sure you want to confirm this appointment? This will notify the client that their appointment is confirmed.
                </div>
                <div id="confirmAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" onclick="confirmAppointment()">
                    <i class="bi bi-check-circle"></i> Confirm Appointment
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Complete Modal -->
<div class="modal fade" id="completeModal" tabindex="-1" aria-labelledby="completeModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-info text-white">
                <h5 class="modal-title" id="completeModalLabel">
                    <i class="bi bi-check2-all"></i> Complete Appointment
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-info" role="alert">
                    <i class="bi bi-check2-all"></i>
                    <strong>Complete:</strong> Are you sure you want to mark this appointment as completed? This indicates the service has been successfully provided.
                </div>
                <div id="completeAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-info" onclick="completeAppointment()">
                    <i class="bi bi-check2-all"></i> Complete Appointment
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="bi bi-exclamation-triangle"></i> Confirm Deletion
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning" role="alert">
                    <i class="bi bi-exclamation-triangle"></i>
                    <strong>Warning:</strong> Are you sure you want to delete this appointment? This action cannot be undone.
                </div>
                <div id="deleteAppointmentDetails">
                    <!-- Content will be populated by JavaScript -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">
                    <i class="bi bi-trash"></i> Confirm Delete
                </button>
            </div>
        </div>
    </div>
</div>



<!-- Hidden form for actions -->
<form id="actionForm" method="post" style="display: none;">
    @Html.AntiForgeryToken()
    <input type="hidden" id="actionId" name="id" />
    <input type="hidden" id="actionType" name="actionType" />
    <input type="hidden" id="cancellationReasonInput" name="cancellationReason" />
</form>

<style>
    .appointments-container {
        padding: 30px;
        background-color: #ffffff;
        font-family: Arial, sans-serif;
    }

    .page-title-container {
        background-color: #e8f5e8;
        border: 2px solid #2d5016;
        border-radius: 8px;
        padding: 20px;
        text-align: center;
        margin-bottom: 30px;
    }

    .page-title {
        font-family: Arial, sans-serif;
        font-size: 32px;
        font-weight: bold;
        color: #2d5016;
        margin: 0;
        letter-spacing: 2px;
    }

    .status-filter-container {
        margin-bottom: 30px;
    }

    .status-filter-tabs {
        display: flex;
        gap: 10px;
    }

    .status-tab {
        background-color: #ffffff;
        border: 2px solid #e8f5e8;
        border-radius: 8px;
        padding: 12px 24px;
        color: #2d5016;
        font-family: Arial, sans-serif;
        font-weight: bold;
        font-size: 16px;
        cursor: pointer;
        transition: all 0.3s ease;
        min-width: 120px;
        text-align: center;
    }

        .status-tab:hover {
            background-color: #e8f5e8;
            border-color: #2d5016;
        }

        .status-tab.active {
            background-color: #e8f5e8;
            border-color: #2d5016;
        }

    .appointments-table-container {
        background-color: #ffffff;
        border: 2px solid #e8f5e8;
        border-radius: 8px;
        overflow: hidden;
    }

    .table-header {
        background-color: #e8f5e8;
        border-bottom: 2px solid #2d5016;
    }

    .table-header-row {
        display: grid;
        grid-template-columns: 1.5fr 1.5fr 1.5fr;
        gap: 1px;
        background-color: #2d5016;
    }

    .table-header-cell {
        background-color: #e8f5e8;
        padding: 15px 10px;
        color: #2d5016;
        font-weight: bold;
        font-size: 16px;
        text-align: center;
        font-family: Arial, sans-serif;
    }

    .table-body {
        min-height: 200px;
    }

    .table-row {
        display: grid;
        grid-template-columns: 1.5fr 1.5fr 1.5fr;
        gap: 1px;
        background-color: #f8f9fa;
        border-bottom: 1px solid #e8f5e8;
    }

        .table-row:hover {
            background-color: #f0f8f0;
        }

    .table-cell {
        background-color: #ffffff;
        padding: 15px 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #2d5016;
        font-size: 14px;
    }

    .date-time-info {
        text-align: center;
    }

    .date {
        font-weight: bold;
        color: #2d5016;
        margin-bottom: 4px;
    }

    .time {
        color: #666;
        font-size: 12px;
    }

    .client-info {
        text-align: center;
    }

    .client-name {
        font-weight: bold;
        color: #2d5016;
        margin-bottom: 4px;
    }

    .client-phone {
        color: #666;
        font-size: 12px;
    }

    .service-info {
        text-align: center;
    }

    .service-name {
        font-weight: bold;
        color: #2d5016;
        margin-bottom: 4px;
    }

    .service-category {
        color: #666;
        font-size: 12px;
    }

    .duration-badge {
        background-color: #e8f5e8;
        border: 1px solid #2d5016;
        border-radius: 4px;
        padding: 4px 8px;
        font-size: 12px;
        font-weight: bold;
        color: #2d5016;
    }

    .status-badge {
        padding: 6px 12px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: bold;
        text-align: center;
        margin-bottom: 4px;
    }

        .status-badge.scheduled {
            background-color: #fff3cd;
            border: 1px solid #ffc107;
            color: #856404;
        }

        .status-badge.confirmed {
            background-color: #d1ecf1;
            border: 1px solid #17a2b8;
            color: #0c5460;
        }

        .status-badge.completed {
            background-color: #d4edda;
            border: 1px solid #28a745;
            color: #155724;
        }

        .status-badge.cancelled {
            background-color: #f8d7da;
            border: 1px solid #dc3545;
            color: #721c24;
        }

        .status-badge.no-show {
            background-color: #ffeaa7;
            border: 1px solid #fd7e14;
            color: #856404;
        }

    .status-date {
        font-size: 10px;
        color: #666;
        text-align: center;
    }

    .cost-amount {
        font-weight: bold;
        color: #2d5016;
    }

    .cost-empty {
        color: #999;
    }

    .action-buttons {
        display: flex;
        gap: 5px;
        justify-content: center;
    }

    .action-btn {
        width: 30px;
        height: 30px;
        border: none;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 12px;
    }

    .view-btn {
        background-color: #e8f5e8;
        color: #2d5016;
        border: 1px solid #2d5016;
    }

    .edit-btn {
        background-color: #74b9ff;
        color: #ffff;
        border: 1px solid #000;
    }

    .confirm-btn {
        background-color: #d1ecf1;
        color: #0c5460;
        border: 1px solid #17a2b8;
    }

    .complete-btn {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #28a745;
    }

    .cancel-btn, .delete-btn {
        background-color: #f8d7da;
        color: #721c24;
        border: 1px solid #dc3545;
    }

    .action-btn:hover {
        transform: scale(1.1);
    }

    .empty-state {
        text-align: center;
        padding: 60px 20px;
        color: #666;
    }

    .empty-icon {
        font-size: 48px;
        color: #ccc;
        margin-bottom: 20px;
    }

    .empty-message {
        font-size: 18px;
        font-weight: bold;
        color: #2d5016;
        margin-bottom: 10px;
    }

    .empty-description {
        color: #666;
        margin-bottom: 20px;
    }

    .empty-action-btn {
        background-color: #e8f5e8;
        border: 2px solid #2d5016;
        border-radius: 8px;
        padding: 12px 24px;
        color: #2d5016;
        text-decoration: none;
        font-weight: bold;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 8px;
    }

        .empty-action-btn:hover {
            background-color: #2d5016;
            color: #ffffff;
            text-decoration: none;
        }

    .alert {
        border-radius: 8px;
        border: 2px solid #e8f5e8;
        margin-bottom: 20px;
    }

    .alert-success {
        background-color: #d4edda;
        border-color: #c3e6cb;
        color: #155724;
    }

    /* Modal styling */
    .modal-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #dee2e6;
    }

    .modal-footer {
        background-color: #f8f9fa;
        border-top: 1px solid #dee2e6;
    }

    .modal-header.bg-success {
        background-color: #198754 !important;
    }

    .btn-close-white {
        filter: invert(1) grayscale(100%) brightness(200%);
    }

    .modal-lg .modal-body {
        padding: 1.5rem;
    }

    .form-label.fw-bold {
        color: #495057;
        margin-bottom: 0.5rem;
    }

    .form-text {
        font-size: 0.875rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    /* Responsive design */
    @@media (max-width: 768px) {
        .appointments-container {
            padding: 20px;
        }

        .page-title {
            font-size: 24px;
        }

        .status-filter-tabs {
            flex-direction: column;
        }

        .status-tab {
            min-width: auto;
        }

        .table-header-row,
        .table-row {
            grid-template-columns: 1fr;
            gap: 0;
        }

        .table-header-cell,
        .table-cell {
            display: none;
        }

            .table-header-cell:first-child,
            .table-header-cell:nth-child(2),
            .table-header-cell:last-child,
            .table-cell:first-child,
            .table-cell:nth-child(2),
            .table-cell:last-child {
                display: flex;
            }

                .table-header-cell:first-child::before {
                    content: "Date & Client";
                }

                .table-header-cell:last-child::before {
                    content: "Actions";
                }
    }
</style>

<script>
    let currentAppointmentId = null;

    function showDetailsModal(id, date, time, duration, status, cost, clientName, clientPhone, therapistGender, pressureLevel, musicPreference, temperaturePreference, comfortItems, serviceName, serviceCategory, notes) {
        const modalBody = document.getElementById('detailsModalBody');
        modalBody.innerHTML = `
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h6 class="card-title mb-0">Client Information</h6>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-6">
                                    <dl class="row">
                                        <dt class="col-sm-4">Date:</dt>
                                        <dd class="col-sm-8">${date}</dd>
                                        <dt class="col-sm-4">Time:</dt>
                                        <dd class="col-sm-8">${time}</dd>
                                        <dt class="col-sm-4">Duration:</dt>
                                        <dd class="col-sm-8">${duration} minutes</dd>
                                        <dt class="col-sm-4">Status:</dt>
                                        <dd class="col-sm-8">
                                            <span class="badge bg-${getStatusBadgeColor(status)}">${status}</span>
                                            ${status.toLowerCase() === 'confirmed' ? '<br><small class="text-muted">Confirmed on: ' + new Date().toLocaleDateString() + '</small>' : ''}
                                        </dd>
                                        <dt class="col-sm-4">Cost:</dt>
                                        <dd class="col-sm-8">${cost}</dd>
                                    </dl>
                                </div>
                                <div class="col-md-6">
                                    <h6 class="fw-bold">Client Information:</h6>
                                    <p class="mb-1"><strong>${clientName}</strong></p>
                                    <p class="text-muted mb-1"><i class="bi bi-telephone"></i> ${clientPhone}</p>
                                    <div class="text-muted mb-3">
                                        <p class="mb-1"><i class="bi bi-person"></i> <strong>Therapist:</strong> ${therapistGender}</p>
                                        <p class="mb-1"><i class="bi bi-hand-index"></i> <strong>Pressure:</strong> ${pressureLevel}</p>
                                        <p class="mb-1"><i class="bi bi-music-note"></i> <strong>Music:</strong> ${musicPreference}</p>
                                        <p class="mb-1"><i class="bi bi-thermometer"></i> <strong>Temperature:</strong> ${temperaturePreference}</p>
                                        <p class="mb-1"><i class="bi bi-heart"></i> <strong>Comfort:</strong> ${comfortItems}</p>
                                    </div>

                                    <h6 class="fw-bold">Service:</h6>
                                    <p class="mb-1"><strong>${serviceName}</strong></p>
                                    <p class="text-muted mb-3">${serviceCategory}</p>

                                </div>
                            </div>
                            ${notes ? `<div class="mt-3"><h6>Notes:</h6><p class="text-muted">${notes}</p></div>` : ''}
                        </div>
                    </div>
                </div>
            </div>
        `;

        const modal = new bootstrap.Modal(document.getElementById('detailsModal'));
        modal.show();
    }

    function showCancelModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('cancelAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;

        const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
        modal.show();
    }

    function showConfirmModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('confirmAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;

        const modal = new bootstrap.Modal(document.getElementById('confirmModal'));
        modal.show();
    }

    function showCompleteModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('completeAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;

        const modal = new bootstrap.Modal(document.getElementById('completeModal'));
        modal.show();
    }

    function showDeleteModal(id, date, time, clientName, serviceName) {
        currentAppointmentId = id;
        const modalBody = document.getElementById('deleteAppointmentDetails');
        modalBody.innerHTML = `
            <h6 class="fw-bold">Appointment Details:</h6>
            <p class="mb-1"><strong>Date:</strong> ${date}</p>
            <p class="mb-1"><strong>Time:</strong> ${time}</p>
            <p class="mb-1"><strong>Client:</strong> ${clientName}</p>
            <p class="mb-3"><strong>Service:</strong> ${serviceName}</p>
        `;

        const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
        modal.show();
    }

    function confirmCancel() {
        const reason = document.getElementById('cancellationReason').value;
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'cancel';
        document.getElementById('cancellationReasonInput').value = reason;
        document.getElementById('actionForm').action = '/Appointment/Cancel';
        document.getElementById('actionForm').submit();
    }

    function confirmAppointment() {
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'confirm';
        document.getElementById('actionForm').action = '/Appointment/Confirm';
        document.getElementById('actionForm').submit();
    }

    function completeAppointment() {
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'complete';
        document.getElementById('actionForm').action = '/Appointment/Complete';
        document.getElementById('actionForm').submit();
    }

    function confirmDelete() {
        document.getElementById('actionId').value = currentAppointmentId;
        document.getElementById('actionType').value = 'delete';
        document.getElementById('actionForm').action = '/Appointment/Delete';
        document.getElementById('actionForm').submit();
    }











     function getStatusBadgeColor(status) {
        switch (status.toLowerCase()) {
            case 'scheduled': return 'primary';
            case 'confirmed': return 'success';
            case 'completed': return 'info';
            case 'cancelled': return 'danger';
            case 'no-show': return 'warning';
            default: return 'secondary';
        }
    }

    function filterAppointments(status) {
        const rows = document.querySelectorAll('.table-row');
        const tabs = document.querySelectorAll('.status-tab');

        // Update tab states
        tabs.forEach(tab => tab.classList.remove('active'));
        document.getElementById(status + 'Tab').classList.add('active');

        rows.forEach(row => {
            const statusElement = row.querySelector('.status-badge');
            const statusText = statusElement.textContent.trim().toLowerCase();

            console.log('statusText: ' + statusText);
            console.log('status: ' + status);
            console.log(statusText.includes(status));

            if (status === 'all' || statusText.includes(status)) {
                row.style.display = 'grid';
            } else {
                row.style.display = 'none';
            }
        });
    }


</script>
